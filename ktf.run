#!/usr/bin/env python
#HEAD#########################################################
#
# Katana Framework | ktf.run                            
# Last Modified: 29/07/2016
#
#########################################################HEAD#


from core.Function import (
	KatanaCheckActionShowModules,
	KatanaCheckActionUseModule,
	KatanaCheckActionExefunction,
	KatanaCheckActionShowOptions,
	KatanaCheckActionisBack,
	KatanaCheckActionShowMOptions,
	KatanaCheckActionGlobalCommands,
	KatanaCheckActionSetValue,
	KatanaCheckActionGetInfo,
	LoadBuffer,
	ShowFullOptions,
	Executefunction,
	ShowInformationModule,
	ShowOptions,
	UpdateValue,
	runModule,
	GetRootModules)

from core.Default import *    
from core.Design import *
from core import Errors 

import xml.etree.ElementTree as ET
import importlib 
import argparse

LoadBuffer()
CLASS_BANNER=DESIGN()
CLASS_BANNER.ktfrun()

parser = argparse.ArgumentParser()
parser.add_argument("-m", "--module", help=" Script module to run.")
args = parser.parse_args()

if __name__=="__main__":
	root=GetRootModules()
	for modules in root.findall('module'):
		if args.module == modules.get('name'):
			category = modules.find('category').text
			filename = modules.find('filename').text
			ModuleToStart = importlib.import_module("modules."+category+"."+filename) 
			init=ModuleToStart.init()
			while True:
				try:
					actions=raw_input(Prompt(init.CodeName))
					if   KatanaCheckActionShowOptions(actions)  :ShowOptions(init)
					elif KatanaCheckActionShowMOptions(actions) :ShowFullOptions(init)
					elif KatanaCheckActionExefunction(actions)  :Executefunction(actions)
					elif KatanaCheckActionSetValue(actions)     :init=UpdateValue(actions,init)
					elif KatanaCheckActionGetInfo(actions)      :ShowInformationModule(init)
					elif runModule(actions):
						for Namevalue in init.options:
							init.var.update({Namevalue:init.options[Namevalue][0]})
						try:
							for Namevalue in init.extra:
								init.var.update({Namevalue:init.extra[Namevalue][0]})
						except:Nothing=False
						ModuleToStart.main(True)
					elif KatanaCheckActionisBack(actions)       :printAlert(6,"This Commands just work in console mode.")
					else :
						if actions != "":KatanaCheckActionGlobalCommands(actions)
				except:Errors.Errors()
	ModuleNotFound(args.module)
